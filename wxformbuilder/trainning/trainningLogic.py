"""Subclass of mainFrame, which is generated by wxFormBuilder."""

import wx, os
import random
import trainningFrame
from cfgManager import load_from_file, get_all_cfg_name, update_cfg

# Implementing mainFrame
class trainningmainGame( trainningFrame.mainFrame ):
    def __init__( self, parent ):
        trainningFrame.mainFrame.__init__( self, parent )
        questions = get_all_cfg_name('conf.d')
        self.m_comboBox_questions.SetItems(questions)

    def getRandomQuestion(self):
        self.questionCfgName = ''
        if self.m_comboBox_questions.GetStringSelection():
            self.questionCfgName = self.m_comboBox_questions.GetStringSelection()
        else:
            self.questionCfgName = random.choice(self.m_comboBox_questions.GetItems())
        self.questionCfg = load_from_file(os.path.join('conf.d', self.questionCfgName + '.cfg'))
        return random.choice(self.questionCfg.sections())


    def onBtnClick_getQuestion( self, event ):
        self.questionSection = self.getRandomQuestion()
        self.m_textCtrl_question_title.SetValue(self.questionCfg.get(self.questionSection, 'question'))
        self.m_textCtrl_question_description.SetValue(self.questionCfg.get(self.questionSection, 'description'))
        self.m_staticText_ca.SetLabel(self.questionSection)
        self.m_textCtrl_answer.SetValue('')
        self.btnGetQuestion.Disable()
        self.btnGetAnswer.Enable()
        self.btnAnswerRight.Disable()
        self.btnAnswerWrong.Disable()
        
        
    def onBtnClick_viewAnswer( self, event ):
        self.m_textCtrl_answer.SetValue(self.questionCfg.get(self.questionSection, 'answer'))
        self.btnGetAnswer.Disable()
        self.btnAnswerRight.Enable()
        self.btnAnswerWrong.Enable()


    def onBtnClick_answerRight(self, event):
        right_cnt = self.questionCfg.getint(self.questionSection, 'right_cnt') + 1
        total_cnt = self.questionCfg.getint(self.questionSection, 'total_cnt') + 1
        self.questionCfg.set(self.questionSection, 'right_cnt', str(right_cnt))
        self.questionCfg.set(self.questionSection, 'total_cnt', str(total_cnt))
        update_cfg(os.path.join('conf.d', self.questionCfgName + '.cfg'), self.questionCfg)
        self.onBtnClick_getQuestion( None )


    def onBtnClick_answerWrong(self, event):
        total_cnt = self.questionCfg.getint(self.questionSection, 'total_cnt') + 1
        self.questionCfg.set(self.questionSection, 'total_cnt', str(total_cnt))
        update_cfg(os.path.join('conf.d', self.questionCfgName + '.cfg'), self.questionCfg)
        self.onBtnClick_getQuestion( None )



if __name__ == '__main__':
    app = wx.App()
    trainningmainGame(None).Show()
    app.MainLoop()
